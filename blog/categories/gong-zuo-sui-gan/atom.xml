<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 工作随感 | Shine's Blog]]></title>
  <link href="http://shineli.com/blog/categories/gong-zuo-sui-gan/atom.xml" rel="self"/>
  <link href="http://shineli.com/"/>
  <updated>2014-07-16T10:48:46+08:00</updated>
  <id>http://shineli.com/</id>
  <author>
    <name><![CDATA[李鑫]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[自我驱动与驱动他人]]></title>
    <link href="http://shineli.com/blog/2014/05/06/zi-wo-qu-dong-yu-qu-dong-ta-ren/"/>
    <updated>2014-05-06T18:30:24+08:00</updated>
    <id>http://shineli.com/blog/2014/05/06/zi-wo-qu-dong-yu-qu-dong-ta-ren</id>
    <content type="html"><![CDATA[<p>随着工作年限的增加，工作中沟通与扯皮的事情也越来越多，研发人员作为研发环节的下游，往往属于被坑的对象。</p>

<p>程序员段子：</p>

<blockquote><p>杀一个程序员不需要用枪，改三次需求就可以了</p></blockquote>

<!-- more -->


<p>在我看来，这种情况出现的原因有以下两个：</p>

<h4>1. PM修改需求的成本远远低于研发人员开发的成本</h4>

<p>需求中的用户交互体验是最难评判的，往往掺杂着很多主观色彩在里面，而PM却无法有效估计研发成本 或者 大家都是乐观派，会认为改动都很小；
另一方面，产品在临上线前，PM往往会发现功能的一些漏洞 或者 有些地方没有想明白
因此，导致了需求一日三变的情况发生。尤其随着敏捷开发的推广，使得很多PM都不撰写MRD了，只是撰写简单的story，
这样PM的成本进一步降低。</p>

<h4>2. RD的产品意识不强烈</h4>

<p>很多RD往往认为技术是最关键的，殊不知技术是基石，业务熟悉度以及全局观才是区分好程序员的根本原因（当然技术也很重要~~）。当RD缺乏业务敏感度以及全局观时，
一方面无法评价PM的需求是否合理，对于PM的需求修改只能全盘接受，无法给出合理建议；同时，大局观的缺乏也使得架构和代码实现过于耦合，加大了需求变更的成本。</p>

<p>要破解上述困境，只能 <strong>自我驱动与驱动他人</strong> 两方面同时发力了。</p>

<p>PM要考虑事情尽量全面，做到任何需求都是有理论或者实际支撑（如调研过其他很多类似产品），要能尽量去了解技术，知道变更的成本。
RD作为PM的资源，PM要合理利用，而不是提出需求就一副高高挂起的样子，尤其抱着需求就这样了，出了问题我负责的态度，因为没有任何一个角色或者个人能对产品负责。</p>

<p>而RD也要尽量去熟悉业务和去了解业内其他产品，以便增加自己的全局观。同时，这样不仅可以更加理解PM的需求目的和评判需求的优劣&amp;重要性，也可以在产品设计时充分保证业务变动的开放性。</p>

<p>好吧，啰啰嗦嗦了一堆，只是有感于今天和业务同学沟通时，发现出了问题后，提出的改进措施都是别人要如何如何，却不从自身找原因，
而自己抱着赌气的态度去进行了争论，以后尽量做到心平气和，从不同的角度去看待问题吧。</p>

<p>用下面的话自勉：</p>

<blockquote><p>驱动他人是很难的，因此，自我驱动才是核心。比别人爬的高，才会看的远~</p></blockquote>
]]></content>
  </entry>
  
</feed>
